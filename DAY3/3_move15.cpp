
struct Point
{
	int x, y;
	
	Point(int a, int b) : x(a), y(b) {}
};

int main()
{
	// 아래 한줄의 의미를 정확히 이해해 보세요
	Point pt = Point(1, 2);

	// C++98 : 1. Point(1,2) 로 임시객체 생성 - 생성자 호출됨.
	//         2. 임시객체가 pt 에 복사 - 복사 생성자 호출
	//			복사 생성자가 private 에 있다면 컴파일 에러

	//			그런데, C++ 컴파일러들이 최적화 해서 복사 생성자 호출을 생략
	//			인자 2개 생성자만 호출(단, 복사생성자가 public에 있어야 성공)

	// C++11 : 1. Point(1,2) 로 임시객체 생성 - 생성자 호출됨.
	//         2. 임시객체가 pt 에 이동 - move 생성자 호출
	//			  move 생성자가 private 에 있다면 컴파일 에러

	//			그런데, C++ 컴파일러들이 최적화 해서 move 생성자 호출을 생략

	// C++17 : 복사 생성자 및 move 생성자 호출을 생략하는 최적화가
	//			모든 컴파일러가 지켜야하는 문법이됨.!!
	//			따라서 인자 2개 생성자만 호출
	Point pt = Point(1, 2); // 인자2개 생성자만 호출
	Point pt = std::move(Point(1, 2)); // 최적화가 지원 안될수 있음
									// 임시객체 만든후 move 생성자
}